应用图标位于res/icon.png
启动页面位于res/splash.png
如需要编译其他的软件，请自行cordova clean清除编译文件后再打包

如果AndroidManifest.xml没有：
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:maxSdkVersion="32" android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:maxSdkVersion="32" android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
则请在项目根目录执行三遍cordova build android，而不是直接在config.xml添加。补全的代码在hooks文件夹里
#tip:忽略这条，导致上面的原因是因为cordova-plugin-camera插件太新了，降级到4.0.3即可

如果有如下错误：
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
可以改为：
import androidx.core.app.ActivityCompat;
import androidx.appcompat.app.AppCompatActivity;
————————————————
原文链接：https://blog.csdn.net/hzhnzmyz/article/details/109570216

cordova-plugin-stepper插件必须是@felicienfrancois\cordova-plugin-stepper

coco辨别web与android的方法是检测UserAgent字符串是否有Cordova

随着Android studio版本的升级，会出现无法引用android.support.v4包
解决办法：
将
android:name="android.support.v4.content.FileProvider"
修改为
android:name="androidx.core.content.FileProvider"
即可
————————————————
原文链接：https://blog.csdn.net/qq_31877171/article/details/114266592

 General error during semantic analysis: Unsupported class file major version 61:更改您的Java版本到8，怎么改install-JDK-Android_SDK.sh有说:
 sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1511 ;
 sudo update-alternatives --install /home/codespace/java/current/bin/java java /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1511 ;
 sudo update-alternatives --config  java && sudo update-alternatives --config javac
 然后选择/usr/lib/jvm/java-8-openjdk-amd64/bin/java和/usr/lib/jvm/java-8-openjdk-amd64/bin/javac，不是/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java ！

cordova 9.0 构建时提示Requirements check failed for JDK 8 如何解决:https://blog.csdn.net/sunwe/article/details/106295073
因为cordova基于的nodejs，突然想到，所有的提示都应该存在于明文代码。于是一狠心，全项目搜索关键字Requirements check failed for。
还真就检索到了：
位于platforms/android/cordova/lib/check_reqs.js （node_modules/cordova-android/bin/templates/cordova/lib/check_reqs.js） 文件里的module.exports.run方法里，相关的有且仅有一处！
// Returns a promise.
module.exports.run = function () {
    return Q.all([this.check_java(), this.check_android()]).then(function (values) {
        console.log('Checking Java JDK and Android SDK versions');
        console.log('ANDROID_SDK_ROOT=' + process.env['ANDROID_SDK_ROOT'] + ' (recommended setting)');
        console.log('ANDROID_HOME=' + process.env['ANDROID_HOME'] + ' (DEPRECATED)');
 
        if (!String(values[0]).startsWith('1.8.')) {
            throw new CordovaError(
                'Requirements check failed for JDK 8 (\'1.8.*\')! Detected version: ' + values[0] + '\n' +
                'Check your ANDROID_SDK_ROOT / JAVA_HOME / PATH environment variables.'
            );
        }
 
        if (!values[1]) {
            throw new CordovaError('Requirements check failed for Android SDK! Android SDK was not detected.');
        }
    });
（实际上这个地方已经改了，修改成变量了，这个变量位置在开头且是：const EXPECTED_JAVA_VERSION = '1.8.x';）
看到了这个1.8的判断条件，同时根据check_java方法也可以明确为判断java环境。于是把“1.8.”直接改成了“11.”,再次编译顺利通过。
后记：
首先我是不推荐任意更改依赖框架源码的，这样不但会影响框架后续更新，也会造成一些未知异常。但没办法，此处仅作为临时解决方案。
我不清楚cordova9是否有只依赖jdk8的关键部分，我也不清楚jdk11会对cordova9造成什么影响，但是我想的很清楚，不管如何要让影响降低到最小，改一处代码，这个影响就真的很小。


如果遇上class版本错误，看看这个↓
Has been compiled by a more recent version of the Java Runtime (class file version 57.0):https://stackoverflow.com/questions/58125830/has-been-compiled-by-a-more-recent-version-of-the-java-runtime-class-file-versi

如果遇上android-sdk路径问题，看看这个↓
Android Command line tools sdkmanager always shows: Warning: Could not create settings:https://stackoverflow.com/questions/60440509/android-command-line-tools-sdkmanager-always-shows-warning-could-not-create-se/61176718#61176718

想自己手动安装Android-SDK?看看这个↓
Installing Android SDK Tools：https://guides.codepath.com/android/installing-android-sdk-tools

ubuntu切换JDK版本：https://blog.csdn.net/qq_42824983/article/details/114674833
sudo update-alternatives --config  java

android-27=android-8.0
android-28=android-9.0
android-29=android-10.0
android-30=android-11.0
android-31=android-12.0
android-32=android-12.0
android-33=android-13.0
android-34=android-14.0
android-35=android-15.0

Ubuntu 安装java jdk 16：https://blog.csdn.net/phker/article/details/121849172
sudo add-apt-repository ppa:openjdk-r/ppa 
sudo apt-get update 
sudo apt-get install openjdk-16-jdk
sudo su
export JAVA_HOME=/usr/lib/jvm/java-16-openjdk-amd64>>/etc/profile
// 重新加载一下环境变量
source /etc/profile
————————————————
版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。                  
原文链接：https://blog.csdn.net/phker/article/details/121849172

I am also facing same issue.
Replace Whitelist class with AllowList in cordova-plugin-file-transfer > src > android > FileTransfer.java
import org.apache.cordova.Whitelist;  => import org.apache.cordova.AllowList;
https://github.com/apache/cordova-plugin-file-transfer/issues/306
#已弃用，已将cordova-plugin-whitelist卸载。如果需要请自己重装修复

https://github.com/apache/cordova-android/issues/1604
./gradlew --stacktrace cdvBuildDebug -b build.gradle
You may not have your ANDROID_HOME variable set. Cordova makes educated guesses and it's possible Cordova is guessing correctly but would be better to explicitly set your ANDROID_HOME however in your .bashrc file. You'll need to start a new terminal session for changes to apply.
export ANDROID_HOME="/path/to/android/sdk"
General error during conversion: Unsupported class file major version 61
Means you're using Java 17 (which is file major version 61) . AGP 7.x, which is what cordova-android@11 uses requires Java 11.
Would be best to use Java 11 for Cordova. CORDOVA_JAVA_HOME can be used to tell cordova where a JDK 11 installation is, while having JDK 17 for other things.
As mentioned #1604 one of the breaking changes of AGP 8 requiring JDK 17, so support for JDK 17 will be coming soon, but I'm not sure if it will be included in our next release since AGP 8 is only necessary for API 34, which will be in beta until summer of this year at the earliest.

https://stackoverflow.com/questions/75114728/no-matching-variant-of-com-android-tools-buildgradle7-4-0-was-found
There are two ways to change Gradle JDK to 11.
File -> Settings -> Build, Execution, Deployment -> Build Tools -> Gradle
or config in gradle.properties:
"org.gradle.java.home= /xxx/Java/jdk-11.0.1"

Note that the compile, runtime, testCompile, and testRuntime configurations introduced by the Java plugin have been deprecated since Gradle 4.10 (Aug 27, 2018), and were finally removed in Gradle 7.0 (Apr 9, 2021).
The aforementioned configurations should be replaced by implementation, runtimeOnly, testImplementation, and testRuntimeOnly, respectively.

ios-deploy请通过"npm install -g ios-deploy"安装

如果你遇到了执行"pod setup"后cordova依旧无法使用的话
可以先卸载掉cocoapods然后安装cocoapods@1.7.5
之后再执行"pod setup",这将会让它从github下载依赖下载
大约会占用2G左右,流量1G.安装前确保您有足够空间和流量(你知道我指的是哪个流量的(嗯)).
安装完成后,就可以卸载掉cocoapods@1.7.5
然后再安装最新版本,安装完成后再执行"pod setup"后一般就能用了.

如果你遇上了"Command failed with exit code 1: pod --version"
那么你可以试试:gem install ffi cocoapods && sudo gem install ffi cocoapods 
如果你是arm电脑,试试:arch -x86_64 gem install ffi cocoapods && sudo arch -x86_64 gem install ffi cocoapods 

关于"pod install --verbose"报错这件事[
    '如果你遇上报错信息包含:(mach-o file, but is an incompatible architecture (have (arm64), need (x86_64h)))
    那么你可以在项目根目录里试试:sudo gem uninstall ffi&& sudo gem install ffi 
    如果你是arm电脑,试试:sudo gem uninstall ffi && sudo arch -x86_64 gem install ffi 
    这两条指令可能会帮助到您,如果不能,试试提issue或者联系我试试能不能解决(本人mac设备是2015年的mac air)
    ',

    '如果遇到了报错信息包含:Could not find 'ffi' (>= 1.15.0) among 96 total gem(s) (Gem::MissingSpecError)
    那么你可以试试:sudo gem install ffi 
    如果你是arm电脑,试试:sudo arch -x86_64 gem install ffi 
    ',

    '如果你遇上了报错信息包含:REXML::ParseException - #<TypeError: wrong argument type String (expected Regexp)>
    可以查看这些网址:
    https://github.com/CocoaPods/CocoaPods/issues/12433
    https://github.com/CocoaPods/CocoaPods/issues/12392#issuecomment-2178749668
    https://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/
    大概地情况就是,这个问题会发生在你用的是系统自带的ruby或你在用arm电脑上
    你可以通过这些网址学会怎么正确安装ruby
    简单来讲,命令就是这些.输入完成后如果安装成功了重启终端即可:
    brew install chruby ruby-install
    ruby-install ruby
    echo "source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh" >> ~/.zshrc
    echo "source $(brew --prefix)/opt/chruby/share/chruby/auto.sh" >> ~/.zshrc
    echo "chruby ruby-3.3.4" >> ~/.zshrc
    ']

关于config.xml/plugin.xml修改AndroidManifest注意：
如果你在plugin.xml或config.xml使用了 config-file或edit-config等类似参数
若要删除它们的话，在config.xml/plugin.xml删除了的同时，
还需到platforms\android\android.json和platforms\android\app\src\main\AndroidManifest.xml删除它们
否则所做的更改仍然保留

关于修改插件的内容：
不仅仅需要更改plugins里的插件，还需要更改node_modules和platforms文件夹里的插件

目前已知bug：4.e8bfe7ab.chunk.js:2  Uncaught TypeError: Cannot read property 'clientX' of undefined

由于android 10起不再支持全局启动页面，且cordova android 12自带splash。
因此cordova-plugin-splashscreen已被弃用，但仍然会被安装.
如果您需要这类的启动图，请自行降低cordova-android并对相关插件和配置进行修改
https://stackoverflow.com/questions/73720590/is-there-a-way-to-still-have-full-screen-splash-images-in-cordova-android-11

附带2024/04/21截止，CoCo_Cordova插件版本：
#出于兼容问题，本模板部分模块经过修复和版本升级
#可能与一下模块版本不同，仅作参考使用
module.exports.metadata = {
    "cordova-plugin-whitelist": "1.3.4",
    "cordova-plugin-geolocation": "4.1.0",
    "es6-promise-plugin": "4.2.2",
    "cordova-plugin-screen-orientation": "3.0.2",
    "cordova-plugin-magnetometer": "1.0.0",
    "cordova-plugin-device-motion": "2.0.1",
    "cordova-plugin-shake": "0.7.0",
    "cordova-plugin-android-permissions": "1.1.2",
    "cordova-plugin-device": "2.0.3",
    "cordova-plugin-file": "6.0.2",
    "cordova-plugin-media": "5.0.3",
    "cordova-plugin-camera": "4.0.3",
    "cordova-plugin-media-capture": "3.0.3",
    "cordova-plugin-viewport": "1.0.5",
    "cordova-plugin-advanced-http": "3.1.1",
    "cordova-plugin-vibration": "2.1.6",
    "cordova-plugin-phone-call": "1.1.3",
    "cordova-plugin-calltrap": "0.0.4",
    "cordova-sms-plugin": "1.0.1",
    "cordova-plugin-contacts": "3.0.1",
    "cordova-plugin-sms-receive": "1.0.2",
    "cordova-plugin-x-toast": "2.7.2",
    "cordova-plugin-advanced-websocket": "1.1.6",
    "cordova-plugin-battery-status": "2.0.3",
    "cordova-plugin-brightness": "0.1.5",
    "@felicienfrancois/cordova-plugin-stepper": "0.2.53",
    "@crc/cordova-plugin-qrscanner": "3.2.0",
    "cordova-plugin-splashscreen": "6.0.2"
  };